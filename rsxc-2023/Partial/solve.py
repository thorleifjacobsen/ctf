# Fetched from parse.py
prv0 = bytes.fromhex("00d79ebd8b15d34ba47e71dd2147349247a996657acf5dc71188ab038aa935431f2463ea658efaa52b1b6698d435fe64cc56a9e18c1bea96fbb56f66dac5e8dcebda4269117ff1308fbbeb8a0f546a1c5b96bc8efc73cd6ad215592d2c3081d8a86b2f66b27bcf6e73f07f1fc80b1fb934c2a2d3713bbf734d4e687d4e4224a446a55b5b459ab2a4dc65af22ea8800eea179dd6c2279f24aad667a82c18d234182cc21aa7ecbb8b1400ed05ac5971ebfc05e1dc016bc5c4c195658a6119b931291eaf53274a88c6a1fc9aa59d70c29dd2b757802c2869dbc4ec5e81a68d56a2409315512551acff7bf6f0e1ce5d0a2473d7645beaf349bedc07ea0462da37890dd9e38ee9cea1794d8575b068f7cf46a7a312d5b867ab3ece58cea230dc40d903326cf93edb98f5b23e95485201b93f222fc8fdc42212a06219ed8f8bbb2011a11e8faa1971416152f67fe4e54efb0cc5d7c85b6baf4c54b5042ab72a53c130a57bd1fe816aebb7f7659cf0b8510c0439fdc297ed5f9c806494df74efc78e3ed50ae7da6c07de899d348031d2e4d93c9fc2d4518c0c3d5ae1458eb0dde41a41feb7417b31909f39456223bcc27f01c1bbcd3c3378f40c2fb10035ece61047995c346c4a9c9f66f90d8347a808ec4d4bd940dde4064544c2da5f967817519f719e32fe3bf7ae1eea9e4bc8b86a3e1696c0c91943f4b453f735c4f68eb2eef05c1")
prv1 = bytes.fromhex("40747601ba10f54d281637173901055f438ffd02d7aec17b4d642b54c92d62e11a57cde8d33369550572f0fd0988cdd9b28427121fc1385fc661e28f9495e00cd58adc9bbb424981380bad1fb998b1318c8630f17bfd3cf12249ece92987da2e49a531a06a8bf345f6f8b18a6b1f9f985bbb9e197cb2ffad94e21d5fe28f7de984e8560d68c81c98105db882a884fb9e4aa2eccbd3911525f158b09da9621e722b9fa4a4d06201d3c0a7f847c758d9a28957005ce3b0a4f92c5e5486581da749994ba59b967da49e3e725a28c8f2801ce39170e702b5fa7c82b5e06f406c94d28f1e49da4430ec564a0f0c5820d2312aa005dc31f9b051dfc4e3c930553c40c2")
prv2 = bytes.fromhex("00efd29b18524ad8260b39282865454c38a18199322438ecbddca34deb571caab68133fd8c35327d855055265c899fc318e5625d04d41da6fcf13ac1fc70537f16c2c2d76add006de1e71be2e3d941dccf443fbffa510298b48a6f2be7b7931a7640bc1f53be989f2073e83f03aac997c63dffe7cce6506245be9c4d417b131bbe3a88f2cbc741b3e18c3bca401666a52dffd70b7629f35949cb1f4f24e4a3dde554066d1dd357843ab2d6021c6e7763b8ae0ab15a070f33f3d6ec8dfcda7e313e1be194bacdb342f157ac907a5f7cad2349d643185643162235ff33f85d3bc39bfb1ee3c77af36fa8b2822c02beae00828822be0103ec2c8b4a2e8037ff75f191")
prv3 = bytes.fromhex("00de59ed8a620393b8c258d993ac8863446b2ca85f6d1d9943648dda2e30e578a1c68bfb3893fc853286ebef4765346fe080048b6382bd85df1fffa46432f88d4668e79dd2a11fea4daeb6a413c941a6f5db2aca5cdee6490234b5491d41bcb663dd504d079bc678d54ef83b47995117a172c7cabe7a2f55e45bc228d767924a81faa6039841b93eb3808a3b65ba6b1b56ffd408fee76a4315eb4c343c8f8eae0f0fa28079e2647ee3889cf8af5e55607dbc52f55f003ee2e354df9b1db4dd42424773614c0712431d13ca3b5f769c464bc2e5e3fbaa3ab6391a9a33c310ecb176dc532cb11c4bd4c8bd8dbce05b162c766f2ca3425e24b9b3f8598f1d0c3adfdd")

# Get the values required (iqmp is not used though)
d    = int.from_bytes(prv0, byteorder='big') 
iqmp = int.from_bytes(prv1, byteorder='big')
p    = int.from_bytes(prv2, byteorder='big') 
q    = int.from_bytes(prv3, byteorder='big')

# Generate N
n = p * q 

# Read encrypted data
ct = open("flag.encrypted", "rb").read()
byteLength = len(ct)
ct = int.from_bytes(ct, byteorder='big')

# Decipher
t = pow(ct,d,n)
t = hex(t)[2:].zfill(byteLength*2) # Remove 0x

# Output
print(bytes.fromhex(t))
